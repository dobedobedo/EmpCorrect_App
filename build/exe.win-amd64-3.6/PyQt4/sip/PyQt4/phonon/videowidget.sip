// videowidget.sip generated by MetaSIP
//
// This file is part of the phonon Python extension module.
//
// Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_4_0 -)

namespace Phonon
{
%TypeHeaderCode
#include <videowidget.h>
%End

    class VideoWidget : QWidget, Phonon::AbstractVideoOutput
    {
%TypeHeaderCode
#include <videowidget.h>
%End

    public:
        enum AspectRatio
        {
            AspectRatioAuto,
            AspectRatioWidget,
            AspectRatio4_3,
            AspectRatio16_9,
        };

        enum ScaleMode
        {
            FitInView,
            ScaleAndCrop,
        };

        VideoWidget(QWidget *parent /TransferThis/ = 0);
        Phonon::VideoWidget::AspectRatio aspectRatio() const;
        Phonon::VideoWidget::ScaleMode scaleMode() const;
        qreal brightness() const;
        qreal contrast() const;
        qreal hue() const;
        qreal saturation() const;

    public slots:
        void setFullScreen(bool fullscreen);
        void exitFullScreen();
        void enterFullScreen();
        void setAspectRatio(Phonon::VideoWidget::AspectRatio);
        void setScaleMode(Phonon::VideoWidget::ScaleMode);
        void setBrightness(qreal value);
        void setContrast(qreal value);
        void setHue(qreal value);
        void setSaturation(qreal value);

    protected:
        virtual void mouseMoveEvent(QMouseEvent *);
        virtual bool event(QEvent *);

    public:
%If (Qt_4_7_0 -)
        QImage snapshot() const;
%End
    };
};

%End
