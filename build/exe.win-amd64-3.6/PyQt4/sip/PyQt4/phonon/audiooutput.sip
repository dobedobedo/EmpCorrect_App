// audiooutput.sip generated by MetaSIP
//
// This file is part of the phonon Python extension module.
//
// Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_4_0 -)

namespace Phonon
{
%TypeHeaderCode
#include <audiooutput.h>
%End

    class AudioOutput : Phonon::AbstractAudioOutput
    {
%TypeHeaderCode
#include <audiooutput.h>
%End

    public:
        AudioOutput(Phonon::Category category, QObject *parent /TransferThis/ = 0);
        explicit AudioOutput(QObject *parent /TransferThis/ = 0);
        QString name() const;
        qreal volume() const;
        qreal volumeDecibel() const;
        Phonon::Category category() const;
        Phonon::AudioOutputDevice outputDevice() const;
        bool isMuted() const;

    public slots:
        void setName(const QString &newName);
        void setVolume(qreal newVolume);
        void setVolumeDecibel(qreal newVolumeDecibel);
        bool setOutputDevice(const Phonon::AudioOutputDevice &newAudioOutputDevice);
        void setMuted(bool mute);

    signals:
        void volumeChanged(qreal newVolume);
        void mutedChanged(bool);
        void outputDeviceChanged(const Phonon::AudioOutputDevice &newAudioOutputDevice);
    };
};

%End
