// qfilesystemwatcher.sip generated by MetaSIP
//
// This file is part of the QtCore Python extension module.
//
// Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_2_0 -)

class QFileSystemWatcher : QObject
{
%TypeHeaderCode
#include <qfilesystemwatcher.h>
%End

public:
    QFileSystemWatcher(QObject *parent /TransferThis/ = 0);
    QFileSystemWatcher(const QStringList &paths, QObject *parent /TransferThis/ = 0);
    virtual ~QFileSystemWatcher();
%If (Qt_5_0_0 -)
    bool addPath(const QString &file);
%End
%If (- Qt_5_0_0)
    void addPath(const QString &file);
%End
%If (Qt_5_0_0 -)
    QStringList addPaths(const QStringList &files);
%End
%If (- Qt_5_0_0)
    void addPaths(const QStringList &files);
%End
    QStringList directories() const;
    QStringList files() const;
%If (Qt_5_0_0 -)
    bool removePath(const QString &file);
%End
%If (- Qt_5_0_0)
    void removePath(const QString &file);
%End
%If (Qt_5_0_0 -)
    QStringList removePaths(const QStringList &files);
%End
%If (- Qt_5_0_0)
    void removePaths(const QStringList &files);
%End

signals:
    void directoryChanged(const QString &path);
    void fileChanged(const QString &path);
};

%End
