// qcolordialog.sip generated by MetaSIP
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%ModuleCode
#include <qcolordialog.h>
%End

class QColorDialog : QDialog
{
%TypeHeaderCode
#include <qcolordialog.h>
%End

public:
%If (Qt_4_5_0 -)

    enum ColorDialogOption
    {
        ShowAlphaChannel,
        NoButtons,
        DontUseNativeDialog,
    };

%End
%If (Qt_4_5_0 -)
    typedef QFlags<QColorDialog::ColorDialogOption> ColorDialogOptions;
%End
%If (Qt_4_5_0 -)
    explicit QColorDialog(QWidget *parent /TransferThis/ = 0);
%End
%If (Qt_4_5_0 -)
    QColorDialog(const QColor &initial, QWidget *parent /TransferThis/ = 0);
%End
%If (Qt_4_5_0 -)
    virtual ~QColorDialog();
%End
%If (Qt_5_0_0 -)
    static QColor getColor(const QColor &initial = Qt::white, QWidget *parent = 0, const QString &title = QString(), QFlags<QColorDialog::ColorDialogOption> options = 0) /ReleaseGIL/;
%End
%If (- Qt_5_0_0)
    static QColor getColor(const QColor &initial = Qt::white, QWidget *parent = 0) /ReleaseGIL/;
%End
%If (Qt_4_5_0 - Qt_5_0_0)
    static QColor getColor(const QColor &initial, QWidget *parent, const QString &title, QFlags<QColorDialog::ColorDialogOption> options = 0) /ReleaseGIL/;
%End
%If (- Qt_4_3_0)
    static QRgb getRgba(QRgb initial, bool *ok = 0, QWidget *parent = 0) /ReleaseGIL/;
%End
%If (Qt_4_3_0 -)
    static QRgb getRgba(QRgb initial = 0xffffffff, bool *ok = 0, QWidget *parent = 0) /ReleaseGIL/;
%End
    static int customCount();
%If (Qt_5_0_0 -)
    static QColor customColor(int index);
%End
%If (- Qt_5_0_0)
    static QRgb customColor(int);
%End
%If (Qt_5_0_0 -)
    static void setCustomColor(int index, QColor color);
%End
%If (- Qt_5_0_0)
    static void setCustomColor(int, QRgb);
%End
%If (Qt_5_0_0 -)
    static QColor standardColor(int index);
%End
%If (Qt_5_0_0 -)
    static void setStandardColor(int index, QColor color);
%End
%If (- Qt_5_0_0)
    static void setStandardColor(int, QRgb);
%End

signals:
%If (Qt_4_5_0 -)
    void colorSelected(const QColor &color);
%End
%If (Qt_4_5_0 -)
    void currentColorChanged(const QColor &color);
%End

protected:
%If (Qt_4_3_0 -)
    virtual void changeEvent(QEvent *e);
%End
%If (Qt_4_5_0 -)
    virtual void done(int result);
%End

private:
%If (- Qt_4_5_0)
    QColorDialog(QWidget *parent /TransferThis/ = 0, bool modal = false);
%End
    QColorDialog(const QColorDialog &);
%If (- Qt_4_5_0)
    virtual ~QColorDialog();
%End

public:
%If (Qt_4_5_0 -)
    void setCurrentColor(const QColor &color);
%End
%If (Qt_4_5_0 -)
    QColor currentColor() const;
%End
%If (Qt_4_5_0 -)
    QColor selectedColor() const;
%End
%If (Qt_4_5_0 -)
    void setOption(QColorDialog::ColorDialogOption option, bool on = true);
%End
%If (Qt_4_5_0 -)
    bool testOption(QColorDialog::ColorDialogOption option) const;
%End
%If (Qt_4_5_0 -)
    void setOptions(QFlags<QColorDialog::ColorDialogOption> options);
%End
%If (Qt_4_5_0 -)
    QFlags<QColorDialog::ColorDialogOption> options() const;
%End
%If (Qt_5_0_0 -)
    virtual void open();
%End
%If (Qt_4_5_0 - Qt_5_0_0)
    void open();
%End
%If (Qt_4_5_0 -)
    void open(SIP_RXOBJ_CON receiver, SIP_SLOT_CON() member) [void (QObject *receiver, const char *member)];
%End
%If (Qt_4_5_0 -)
    virtual void setVisible(bool visible);
%End
};

%If (Qt_4_5_0 -)
QFlags<QColorDialog::ColorDialogOption> operator|(QColorDialog::ColorDialogOption f1, QFlags<QColorDialog::ColorDialogOption> f2);
%End
