// qgraphicssceneevent.sip generated by MetaSIP
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_2_0 -)

class QGraphicsSceneEvent : QEvent /NoDefaultCtors/
{
%TypeHeaderCode
#include <qgraphicssceneevent.h>
%End

public:
    virtual ~QGraphicsSceneEvent();
    QWidget *widget() const;
    void setWidget(QWidget *widget);

private:
%If (Qt_4_6_0 -)
    QGraphicsSceneEvent(const QGraphicsSceneEvent &);
%End
};

%End
%If (Qt_4_2_0 -)

class QGraphicsSceneMouseEvent : QGraphicsSceneEvent /NoDefaultCtors/
{
%TypeHeaderCode
#include <qgraphicssceneevent.h>
%End

public:
    virtual ~QGraphicsSceneMouseEvent();
    QPointF pos() const;
    QPointF scenePos() const;
    QPoint screenPos() const;
    QPointF buttonDownPos(Qt::MouseButton button) const;
    QPointF buttonDownScenePos(Qt::MouseButton button) const;
    QPoint buttonDownScreenPos(Qt::MouseButton button) const;
    QPointF lastPos() const;
    QPointF lastScenePos() const;
    QPoint lastScreenPos() const;
    Qt::MouseButtons buttons() const;
    Qt::MouseButton button() const;
    Qt::KeyboardModifiers modifiers() const;

private:
%If (Qt_4_6_3 -)
    QGraphicsSceneMouseEvent(const QGraphicsSceneMouseEvent &);
%End
};

%End
%If (Qt_4_2_0 -)

class QGraphicsSceneWheelEvent : QGraphicsSceneEvent /NoDefaultCtors/
{
%TypeHeaderCode
#include <qgraphicssceneevent.h>
%End

public:
    virtual ~QGraphicsSceneWheelEvent();
    QPointF pos() const;
    QPointF scenePos() const;
    QPoint screenPos() const;
    Qt::MouseButtons buttons() const;
    Qt::KeyboardModifiers modifiers() const;
    int delta() const;
%If (Qt_4_3_0 -)
    Qt::Orientation orientation() const;
%End

private:
%If (Qt_4_6_3 -)
    QGraphicsSceneWheelEvent(const QGraphicsSceneWheelEvent &);
%End
};

%End
%If (Qt_4_2_0 -)

class QGraphicsSceneContextMenuEvent : QGraphicsSceneEvent /NoDefaultCtors/
{
%TypeHeaderCode
#include <qgraphicssceneevent.h>
%End

public:
    enum Reason
    {
        Mouse,
        Keyboard,
        Other,
    };

    virtual ~QGraphicsSceneContextMenuEvent();
    QPointF pos() const;
    QPointF scenePos() const;
    QPoint screenPos() const;
    Qt::KeyboardModifiers modifiers() const;
    QGraphicsSceneContextMenuEvent::Reason reason() const;

private:
%If (Qt_4_6_3 -)
    QGraphicsSceneContextMenuEvent(const QGraphicsSceneContextMenuEvent &);
%End
};

%End
%If (Qt_4_2_0 -)

class QGraphicsSceneHoverEvent : QGraphicsSceneEvent /NoDefaultCtors/
{
%TypeHeaderCode
#include <qgraphicssceneevent.h>
%End

public:
    virtual ~QGraphicsSceneHoverEvent();
    QPointF pos() const;
    QPointF scenePos() const;
    QPoint screenPos() const;
%If (Qt_4_4_0 -)
    QPointF lastPos() const;
%End
%If (Qt_4_4_0 -)
    QPointF lastScenePos() const;
%End
%If (Qt_4_4_0 -)
    QPoint lastScreenPos() const;
%End
%If (Qt_4_4_0 -)
    Qt::KeyboardModifiers modifiers() const;
%End

private:
%If (Qt_4_6_3 -)
    QGraphicsSceneHoverEvent(const QGraphicsSceneHoverEvent &);
%End
};

%End
%If (Qt_4_2_0 -)

class QGraphicsSceneHelpEvent : QGraphicsSceneEvent /NoDefaultCtors/
{
%TypeHeaderCode
#include <qgraphicssceneevent.h>
%End

public:
    virtual ~QGraphicsSceneHelpEvent();
    QPointF scenePos() const;
    QPoint screenPos() const;

private:
%If (Qt_4_6_3 -)
    QGraphicsSceneHelpEvent(const QGraphicsSceneHelpEvent &);
%End
};

%End
%If (Qt_4_2_0 -)

class QGraphicsSceneDragDropEvent : QGraphicsSceneEvent /NoDefaultCtors/
{
%TypeHeaderCode
#include <qgraphicssceneevent.h>
%End

public:
    virtual ~QGraphicsSceneDragDropEvent();
    QPointF pos() const;
    QPointF scenePos() const;
    QPoint screenPos() const;
    Qt::MouseButtons buttons() const;
    Qt::KeyboardModifiers modifiers() const;
    Qt::DropActions possibleActions() const;
    Qt::DropAction proposedAction() const;
    void acceptProposedAction();
    Qt::DropAction dropAction() const;
    void setDropAction(Qt::DropAction action);
    QWidget *source() const;
    const QMimeData *mimeData() const;

private:
%If (Qt_4_6_3 -)
    QGraphicsSceneDragDropEvent(const QGraphicsSceneDragDropEvent &);
%End
};

%End
%If (Qt_4_4_0 -)

class QGraphicsSceneResizeEvent : QGraphicsSceneEvent
{
%TypeHeaderCode
#include <qgraphicssceneevent.h>
%End

public:
    QGraphicsSceneResizeEvent();
    virtual ~QGraphicsSceneResizeEvent();
    QSizeF oldSize() const;
    QSizeF newSize() const;

private:
%If (Qt_4_6_3 -)
    QGraphicsSceneResizeEvent(const QGraphicsSceneResizeEvent &);
%End
};

%End
%If (Qt_4_4_0 -)

class QGraphicsSceneMoveEvent : QGraphicsSceneEvent
{
%TypeHeaderCode
#include <qgraphicssceneevent.h>
%End

public:
    QGraphicsSceneMoveEvent();
    virtual ~QGraphicsSceneMoveEvent();
    QPointF oldPos() const;
    QPointF newPos() const;

private:
%If (Qt_4_6_3 -)
    QGraphicsSceneMoveEvent(const QGraphicsSceneMoveEvent &);
%End
};

%End
