// qgraphicsitemanimation.sip generated by MetaSIP
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_2_0 -)

class QGraphicsItemAnimation : QObject
{
%TypeHeaderCode
#include <qgraphicsitemanimation.h>
%End

public:
    QGraphicsItemAnimation(QObject *parent /TransferThis/ = 0);
    virtual ~QGraphicsItemAnimation();
    QGraphicsItem *item() const;
    void setItem(QGraphicsItem *item /KeepReference/);
    QTimeLine *timeLine() const;
    void setTimeLine(QTimeLine *timeLine /KeepReference/);
    QPointF posAt(qreal step) const;
    void setPosAt(qreal step, const QPointF &pos);
    QMatrix matrixAt(qreal step) const;
    qreal rotationAt(qreal step) const;
    void setRotationAt(qreal step, qreal angle);
    qreal xTranslationAt(qreal step) const;
    qreal yTranslationAt(qreal step) const;
    void setTranslationAt(qreal step, qreal dx, qreal dy);
    qreal verticalScaleAt(qreal step) const;
    qreal horizontalScaleAt(qreal step) const;
    void setScaleAt(qreal step, qreal sx, qreal sy);
    qreal verticalShearAt(qreal step) const;
    qreal horizontalShearAt(qreal step) const;
    void setShearAt(qreal step, qreal sh, qreal sv);
    void clear();

public slots:
    void reset();
    void setStep(qreal x);

protected:
    virtual void afterAnimationStep(qreal step);
    virtual void beforeAnimationStep(qreal step);

public:
%If (Qt_4_3_0 -)
    QList<QPair<qreal, QPointF>> posList() const;
%End
%If (Qt_4_3_0 -)
    QList<QPair<qreal, qreal>> rotationList() const;
%End
%If (Qt_4_3_0 -)
    QList<QPair<qreal, QPointF>> translationList() const;
%End
%If (Qt_4_3_0 -)
    QList<QPair<qreal, QPointF>> scaleList() const;
%End
%If (Qt_4_3_0 -)
    QList<QPair<qreal, QPointF>> shearList() const;
%End

private:
    QGraphicsItemAnimation(const QGraphicsItemAnimation &);
};

%End
