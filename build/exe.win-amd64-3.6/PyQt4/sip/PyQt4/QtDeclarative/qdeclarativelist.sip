// qdeclarativelist.sip generated by MetaSIP
//
// This file is part of the QtDeclarative Python extension module.
//
// Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_7_0 -)

class QDeclarativeListReference
{
%TypeHeaderCode
#include <qdeclarativelist.h>
%End

public:
    QDeclarativeListReference();
    QDeclarativeListReference(QObject *, const char *property, QDeclarativeEngine *engine = 0);
    QDeclarativeListReference(const QDeclarativeListReference &);
    ~QDeclarativeListReference();
    bool isValid() const;
    QObject *object() const;
    const QMetaObject *listElementType() const;
    bool canAppend() const;
    bool canAt() const;
    bool canClear() const;
    bool canCount() const;
    bool append(QObject *) const;
    QObject *at(int) const;
    bool clear() const;
    int count() const;
};

%End
