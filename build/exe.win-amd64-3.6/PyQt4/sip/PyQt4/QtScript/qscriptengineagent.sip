// qscriptengineagent.sip generated by MetaSIP
//
// This file is part of the QtScript Python extension module.
//
// Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_4_0 -)

class QScriptEngineAgent /Supertype=sip.wrapper/
{
%TypeHeaderCode
#include <qscriptengineagent.h>
%End

public:
    enum Extension
    {
%If (Qt_4_5_0 -)
        DebuggerInvocationRequest,
%End
    };

    QScriptEngineAgent(QScriptEngine *engine /TransferThis/);
    virtual ~QScriptEngineAgent();
    virtual void scriptLoad(qint64 id, const QString &program, const QString &fileName, int baseLineNumber);
    virtual void scriptUnload(qint64 id);
    virtual void contextPush();
    virtual void contextPop();
    virtual void functionEntry(qint64 scriptId);
    virtual void functionExit(qint64 scriptId, const QScriptValue &returnValue);
    virtual void positionChange(qint64 scriptId, int lineNumber, int columnNumber);
    virtual void exceptionThrow(qint64 scriptId, const QScriptValue &exception, bool hasHandler);
    virtual void exceptionCatch(qint64 scriptId, const QScriptValue &exception);
    virtual bool supportsExtension(QScriptEngineAgent::Extension extension) const;
    virtual QVariant extension(QScriptEngineAgent::Extension extension, const QVariant &argument /DocValue="Py_v3:None"/ = QVariant());
    QScriptEngine *engine() const;

private:
    QScriptEngineAgent(const QScriptEngineAgent &);
};

%End
