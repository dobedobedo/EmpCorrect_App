// videoplayer.sip generated by MetaSIP
//
// This file is part of the phonon Python extension module.
//
// Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_4_0 -)

namespace Phonon
{
%TypeHeaderCode
#include <videoplayer.h>
%End

    class VideoPlayer : QWidget
    {
%TypeHeaderCode
#include <videoplayer.h>
%End

    public:
        VideoPlayer(Phonon::Category category, QWidget *parent /TransferThis/ = 0);
%If (Qt_4_5_0 -)
        VideoPlayer(QWidget *parent /TransferThis/ = 0);
%End
        virtual ~VideoPlayer();
        qint64 totalTime() const;
        qint64 currentTime() const;
        float volume() const;
        bool isPlaying() const;
        bool isPaused() const;

    public slots:
        void load(const Phonon::MediaSource &source);
        void play(const Phonon::MediaSource &source);
        void play();
        void pause();
        void stop();
        void seek(qint64 ms);
        void setVolume(float volume);

    public:
        Phonon::MediaObject *mediaObject() const;
        Phonon::AudioOutput *audioOutput() const;
        Phonon::VideoWidget *videoWidget() const;

    signals:
        void finished();
    };
};

%End
