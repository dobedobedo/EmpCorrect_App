// qtranslator.sip generated by MetaSIP
//
// This file is part of the QtCore Python extension module.
//
// Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QTranslator : QObject
{
%TypeHeaderCode
#include <qtranslator.h>
%End

public:
    explicit QTranslator(QObject *parent /TransferThis/ = 0);
    virtual ~QTranslator();
%If (Qt_5_0_0 -)
    virtual QString translate(const char *context, const char *sourceText, const char *disambiguation = 0, int n = -1) const;
%End
%If (- Qt_5_0_0)
    virtual QString translate(const char *context, const char *sourceText, const char *disambiguation = 0) const;
%End
%If (Qt_4_2_0 - Qt_5_0_0)
    QString translate(const char *context, const char *sourceText, const char *comment, int n) const;
%End
    virtual bool isEmpty() const;
    bool load(const QString &fileName, const QString &directory /DocValue="Py_v3:''"/ = QString(), const QString &searchDelimiters /DocValue="Py_v3:''"/ = QString(), const QString &suffix /DocValue="Py_v3:''"/ = QString()) /ReleaseGIL/;
%If (Qt_4_8_0 -)
    bool load(const QLocale &locale, const QString &fileName, const QString &prefix /DocValue="Py_v3:''"/ = QString(), const QString &directory /DocValue="Py_v3:''"/ = QString(), const QString &suffix /DocValue="Py_v3:''"/ = QString()) /ReleaseGIL/;
%End
%If (Qt_5_0_0 -)
    bool load(const uchar *data /Array/, int len /ArraySize/, const QString &directory = QString()) /PyName=loadFromData,ReleaseGIL/;
%End
%If (- Qt_5_0_0)
    bool load(const uchar *data /Array/, int len /ArraySize/) /PyName=loadFromData,ReleaseGIL/;
%End

private:
    QTranslator(const QTranslator &);
};
