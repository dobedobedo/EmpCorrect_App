// qglcolormap.sip generated by MetaSIP
//
// This file is part of the QtOpenGL Python extension module.
//
// Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (PyQt_Deprecated_5_0)

class QGLColormap
{
%TypeHeaderCode
#include <qglcolormap.h>
%End

public:
    QGLColormap();
    QGLColormap(const QGLColormap &);
    ~QGLColormap();
    void detach();
    bool isEmpty() const;
    int size() const;
    void setEntries(SIP_PYLIST colors /DocType="list-of-int"/, int base = 0);
%MethodCode
        // The Python implementation takes a list of numbers.
        QRgb *colours = new QRgb[PyList_GET_SIZE(a0)];
        
        for (SIP_SSIZE_T i = 0; i < PyList_GET_SIZE(a0); ++i)
            colours[i] = PyLong_AsUnsignedLong(PyList_GET_ITEM(a0, i));
        
        sipCpp->setEntries(PyList_GET_SIZE(a0), colours, a1);
        
        delete[] colours;
%End

    void setEntry(int idx, QRgb color);
    void setEntry(int idx, const QColor &color);
    QRgb entryRgb(int idx) const;
    QColor entryColor(int idx) const;
    int find(QRgb color) const;
    int findNearest(QRgb color) const;

protected:
    Qt::HANDLE handle();
    void setHandle(Qt::HANDLE ahandle);
};

%End
