// qabstractprintdialog.sip generated by MetaSIP
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%ModuleCode
#include <qabstractprintdialog.h>
%End

%If (PyQt_Printer)

class QAbstractPrintDialog : QDialog
{
%TypeHeaderCode
#include <qabstractprintdialog.h>
%End

public:
    enum PrintRange
    {
        AllPages,
        Selection,
        PageRange,
%If (Qt_4_7_0 -)
        CurrentPage,
%End
    };

%If (Py_v3)

    enum PrintDialogOption
    {
        None /PyName=None_/,
        PrintToFile,
        PrintSelection,
        PrintPageRange,
        PrintCollateCopies,
%If (Qt_4_4_0 -)
        PrintShowPageSize,
%End
%If (Qt_4_4_0 -)
        DontUseSheet,
%End
%If (Qt_4_7_0 -)
        PrintCurrentPage,
%End
    };

%End
%If (!Py_v3)
// Backwards compatible PrintDialogOption for Python v2.
// Note that we have to duplicate the whole enum because MetaSIP doesn't
// support handwritten code in enum definitions.

enum PrintDialogOption {
    None,
    None /PyName=None_/,
    PrintToFile,
    PrintSelection,
    PrintPageRange,
    PrintCollateCopies,
    PrintShowPageSize,
    PrintCurrentPage
};
%End
    typedef QFlags<QAbstractPrintDialog::PrintDialogOption> PrintDialogOptions;
%If (PyQt_PrintDialog)
    QAbstractPrintDialog(QPrinter *printer, QWidget *parent /TransferThis/ = 0);
%If (Qt_4_5_0 -)
    virtual ~QAbstractPrintDialog();
%End
    virtual int exec() = 0 /PyName=exec_,ReleaseGIL/;
%If (Py_v3)
    virtual int exec() = 0 /ReleaseGIL/;
%End
    void addEnabledOption(QAbstractPrintDialog::PrintDialogOption option);
    void setEnabledOptions(QFlags<QAbstractPrintDialog::PrintDialogOption> options);
    QFlags<QAbstractPrintDialog::PrintDialogOption> enabledOptions() const;
    bool isOptionEnabled(QAbstractPrintDialog::PrintDialogOption option) const;
    void setPrintRange(QAbstractPrintDialog::PrintRange range);
    QAbstractPrintDialog::PrintRange printRange() const;
    void setMinMax(int min, int max);
    int minPage() const;
    int maxPage() const;
    void setFromTo(int fromPage, int toPage);
    int fromPage() const;
    int toPage() const;
    QPrinter *printer() const;
%If (Qt_4_4_0 -)
    void setOptionTabs(const QList<QWidget*> &tabs);
%End

private:
    QAbstractPrintDialog(const QAbstractPrintDialog &);

public:
%End // PyQt_PrintDialog
};

%End
%If (PyQt_Printer)
QFlags<QAbstractPrintDialog::PrintDialogOption> operator|(QAbstractPrintDialog::PrintDialogOption f1, QFlags<QAbstractPrintDialog::PrintDialogOption> f2);
%End
