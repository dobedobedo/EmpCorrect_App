// qdeclarativecontext.sip generated by MetaSIP
//
// This file is part of the QtDeclarative Python extension module.
//
// Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_7_0 -)

class QDeclarativeContext : QObject
{
%TypeHeaderCode
#include <qdeclarativecontext.h>
%End

public:
    QDeclarativeContext(QDeclarativeEngine *engine, QObject *parent /TransferThis/ = 0);
    QDeclarativeContext(QDeclarativeContext *context, QObject *parent /TransferThis/ = 0);
    virtual ~QDeclarativeContext();
    bool isValid() const;
    QDeclarativeEngine *engine() const;
    QDeclarativeContext *parentContext() const;
    QObject *contextObject() const;
    void setContextObject(QObject * /KeepReference/);
    QVariant contextProperty(const QString &) const;
    void setContextProperty(const QString &, QObject * /KeepReference/);
    void setContextProperty(const QString &, const QVariant &);
    QUrl resolvedUrl(const QUrl &);
    void setBaseUrl(const QUrl &);
    QUrl baseUrl() const;

private:
    QDeclarativeContext(const QDeclarativeContext &);
};

%End
