// qwebpluginfactory.sip generated by MetaSIP
//
// This file is part of the QtWebKit Python extension module.
//
// Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_4_0 -)

class QWebPluginFactory : QObject
{
%TypeHeaderCode
#include <qwebpluginfactory.h>
%End

public:
    struct MimeType
    {
%TypeHeaderCode
#include <qwebpluginfactory.h>
%End

        QString name;
        QString description;
        QStringList fileExtensions;
%If (Qt_4_6_0 -)
        bool operator==(const QWebPluginFactory::MimeType &other) const;
%End
%If (Qt_4_6_0 -)
        bool operator!=(const QWebPluginFactory::MimeType &other) const;
%End
    };

    struct Plugin
    {
%TypeHeaderCode
#include <qwebpluginfactory.h>
%End

        QString name;
        QString description;
        QList<QWebPluginFactory::MimeType> mimeTypes;
    };

    explicit QWebPluginFactory(QObject *parent /TransferThis/ = 0);
    virtual ~QWebPluginFactory();
    virtual QList<QWebPluginFactory::Plugin> plugins() const = 0;
    virtual void refreshPlugins();
    virtual QObject *create(const QString &mimeType, const QUrl &url, const QStringList &argumentNames, const QStringList &argumentValues) const = 0 /Factory/;

    enum Extension
    {
    };

    class ExtensionOption
    {
%TypeHeaderCode
#include <qwebpluginfactory.h>
%End
    };

    class ExtensionReturn
    {
%TypeHeaderCode
#include <qwebpluginfactory.h>
%End
    };

    virtual bool extension(QWebPluginFactory::Extension extension, const QWebPluginFactory::ExtensionOption *option = 0, QWebPluginFactory::ExtensionReturn *output = 0);
    virtual bool supportsExtension(QWebPluginFactory::Extension extension) const;
};

%End
