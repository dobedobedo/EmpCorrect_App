// qglyphrun.sip generated by MetaSIP
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


%If (Qt_4_8_0 -)
%If (PyQt_RawFont)

class QGlyphRun
{
%TypeHeaderCode
#include <qglyphrun.h>
%End

public:
    QGlyphRun();
    QGlyphRun(const QGlyphRun &other);
    ~QGlyphRun();
    QRawFont rawFont() const;
    void setRawFont(const QRawFont &rawFont);
    QVector<unsigned int> glyphIndexes() const;
    void setGlyphIndexes(const QVector<unsigned int> &glyphIndexes);
    QVector<QPointF> positions() const;
    void setPositions(const QVector<QPointF> &positions);
    void clear();
    bool operator==(const QGlyphRun &other) const;
    bool operator!=(const QGlyphRun &other) const;
    void setOverline(bool overline);
    bool overline() const;
    void setUnderline(bool underline);
    bool underline() const;
    void setStrikeOut(bool strikeOut);
    bool strikeOut() const;
%If (Qt_5_0_0 -)

    enum GlyphRunFlag
    {
        Overline,
        Underline,
        StrikeOut,
        RightToLeft,
        SplitLigature,
    };

%End
%If (Qt_5_0_0 -)
    typedef QFlags<QGlyphRun::GlyphRunFlag> GlyphRunFlags;
%End
%If (Qt_5_0_0 -)
    void setRightToLeft(bool on);
%End
%If (Qt_5_0_0 -)
    bool isRightToLeft() const;
%End
%If (Qt_5_0_0 -)
    void setFlag(QGlyphRun::GlyphRunFlag flag, bool enabled = true);
%End
%If (Qt_5_0_0 -)
    void setFlags(QFlags<QGlyphRun::GlyphRunFlag> flags);
%End
%If (Qt_5_0_0 -)
    QFlags<QGlyphRun::GlyphRunFlag> flags() const;
%End
%If (Qt_5_0_0 -)
    void setBoundingRect(const QRectF &boundingRect);
%End
%If (Qt_5_0_0 -)
    QRectF boundingRect() const;
%End
%If (Qt_5_0_0 -)
    bool isEmpty() const;
%End
%If (Qt_5_0_0 -)
    void swap(QGlyphRun &other);
%End
};

%End
%End
