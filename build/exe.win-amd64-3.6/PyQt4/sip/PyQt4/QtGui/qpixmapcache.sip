// qpixmapcache.sip generated by MetaSIP
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QPixmapCache
{
%TypeHeaderCode
#include <qpixmapcache.h>
%End

public:
%If (Qt_4_6_0 -)

    class Key
    {
%TypeHeaderCode
#include <qpixmapcache.h>
%End

    public:
        Key();
        Key(const QPixmapCache::Key &other);
        ~Key();
        bool operator==(const QPixmapCache::Key &key) const;
        bool operator!=(const QPixmapCache::Key &key) const;
    };

%End
    static int cacheLimit();
    static void clear();
    static QPixmap *find(const QString &key);
%If (- Qt_4_6_0)
    static bool find(const QString &key, QPixmap &);
%End
%If (Qt_4_6_0 -)
    static bool find(const QString &key, QPixmap *pixmap);
%End
%If (Qt_4_6_0 -)
    static bool find(const QPixmapCache::Key &key, QPixmap *pixmap);
%End
    static bool insert(const QString &key, const QPixmap &);
%If (Qt_4_6_0 -)
    static QPixmapCache::Key insert(const QPixmap &pixmap);
%End
    static void remove(const QString &key);
%If (Qt_4_6_0 -)
    static void remove(const QPixmapCache::Key &key);
%End
%If (Qt_4_6_0 -)
    static bool replace(const QPixmapCache::Key &key, const QPixmap &pixmap);
%End
    static void setCacheLimit(int);
};
