// qtemporaryfile.sip generated by MetaSIP
//
// This file is part of the QtCore Python extension module.
//
// Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QTemporaryFile : QFile
{
%TypeHeaderCode
#include <qtemporaryfile.h>
%End

public:
    QTemporaryFile();
    explicit QTemporaryFile(const QString &templateName);
    explicit QTemporaryFile(QObject *parent /TransferThis/);
    QTemporaryFile(const QString &templateName, QObject *parent /TransferThis/);
    virtual ~QTemporaryFile();
    bool autoRemove() const;
    void setAutoRemove(bool b);
    bool open() /ReleaseGIL/;
%If (Qt_5_0_0 -)
    virtual QString fileName() const;
%End
%If (- Qt_5_0_0)
    QString fileName() const;
%End
    QString fileTemplate() const;
    void setFileTemplate(const QString &name);
%If (PyQt_Deprecated_5_0)
    static QTemporaryFile *createLocalFile(const QString &fileName) /Factory,ReleaseGIL/;
%End
%If (PyQt_Deprecated_5_0)
    static QTemporaryFile *createLocalFile(QFile &file) /Factory,ReleaseGIL/;
%End
%If (Qt_5_0_0 -)
    static QTemporaryFile *createNativeFile(const QString &fileName) /Factory,ReleaseGIL/;
%End
%If (Qt_5_0_0 -)
    static QTemporaryFile *createNativeFile(QFile &file) /Factory,ReleaseGIL/;
%End
%If (- Qt_5_0_0)
    virtual QAbstractFileEngine *fileEngine() const;
%End

protected:
    virtual bool open(QFlags<QIODevice::OpenModeFlag> flags) /ReleaseGIL/;

private:
    QTemporaryFile(const QTemporaryFile &);
};
