// qcheckbox.sip generated by MetaSIP
//
// This file is part of the QtGui Python extension module.
//
// Copyright (c) 2015 Riverbank Computing Limited <info@riverbankcomputing.com>
// 
// This file is part of PyQt4.
// 
// This file may be used under the terms of the GNU General Public License
// version 3.0 as published by the Free Software Foundation and appearing in
// the file LICENSE included in the packaging of this file.  Please review the
// following information to ensure the GNU General Public License version 3.0
// requirements will be met: http://www.gnu.org/copyleft/gpl.html.
// 
// If you do not wish to use this file under the terms of the GPL version 3.0
// then you may purchase a commercial license.  For more information contact
// info@riverbankcomputing.com.
// 
// This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
// WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.


class QCheckBox : QAbstractButton
{
%TypeHeaderCode
#include <qcheckbox.h>
%End

public:
    explicit QCheckBox(QWidget *parent /TransferThis/ = 0);
    QCheckBox(const QString &text, QWidget *parent /TransferThis/ = 0);
%If (Qt_5_0_0 -)
    virtual ~QCheckBox();
%End
    virtual QSize sizeHint() const;
    void setTristate(bool on = true);
    bool isTristate() const;
    Qt::CheckState checkState() const;
    void setCheckState(Qt::CheckState state);
%If (Qt_4_8_0 -)
    virtual QSize minimumSizeHint() const;
%End

signals:
    void stateChanged(int);

protected:
    virtual bool hitButton(const QPoint &pos) const;
    virtual void checkStateSet();
    virtual void nextCheckState();
    virtual bool event(QEvent *e);
    virtual void paintEvent(QPaintEvent *);
    virtual void mouseMoveEvent(QMouseEvent *);
%If (Qt_4_3_0 -)
    void initStyleOption(QStyleOptionButton *option) const;
%End

private:
    QCheckBox(const QCheckBox &);
};
